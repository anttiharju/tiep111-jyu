package kirjahylly.test;
// Generated by ComTest BEGIN
import kirjahylly.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.03.10 09:53:03 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjailijatTest {



  // Generated by ComTest BEGIN
  /** testIterator74 */
  @Test
  public void testIterator74() {    // Kirjailijat: 74
    Kirjailijat kirjailijatVar = new Kirjailijat(); 
    Kirjailija pete = new Kirjailija(2); kirjailijatVar.lisaa(pete); 
    Kirjailija vesa = new Kirjailija(1); kirjailijatVar.lisaa(vesa); 
    Kirjailija tupu = new Kirjailija(2); kirjailijatVar.lisaa(tupu); 
    Kirjailija hupu = new Kirjailija(1); kirjailijatVar.lisaa(hupu); 
    Kirjailija lupu = new Kirjailija(2); kirjailijatVar.lisaa(lupu); 
    Iterator<Kirjailija> i2 = kirjailijatVar.iterator(); 
    assertEquals("From: Kirjailijat line: 86", pete, i2.next()); 
    assertEquals("From: Kirjailijat line: 87", vesa, i2.next()); 
    assertEquals("From: Kirjailijat line: 88", tupu, i2.next()); 
    assertEquals("From: Kirjailijat line: 89", hupu, i2.next()); 
    assertEquals("From: Kirjailijat line: 90", lupu, i2.next()); 
    try {
    assertEquals("From: Kirjailijat line: 91", vesa, i2.next()); 
    fail("Kirjailijat: 91 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for ( Kirjailija kir : kirjailijatVar ) {
    assertEquals("From: Kirjailijat line: 97", jnrot[n], kir.getId()); n++; 
    }
    assertEquals("From: Kirjailijat line: 100", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailija114 */
  @Test
  public void testAnnaKirjailija114() {    // Kirjailijat: 114
    Kirjailijat kirjailijatVar = new Kirjailijat(); 
    Kirjailija pete = new Kirjailija(0); kirjailijatVar.lisaa(pete); 
    Kirjailija vesa = new Kirjailija(1); kirjailijatVar.lisaa(vesa); 
    Kirjailija tupu = new Kirjailija(2); kirjailijatVar.lisaa(tupu); 
    Kirjailija hupu = new Kirjailija(3); kirjailijatVar.lisaa(hupu); 
    Kirjailija lupu = new Kirjailija(4); kirjailijatVar.lisaa(lupu); 
    Kirjailija rupu = new Kirjailija(5); kirjailijatVar.lisaa(rupu); 
    Kirjailija etsitty = new Kirjailija(); 
    etsitty = kirjailijatVar.annaKirjailija(0); 
    assertEquals("From: Kirjailijat line: 128", true, etsitty == pete); 
    etsitty = kirjailijatVar.annaKirjailija(1); 
    assertEquals("From: Kirjailijat line: 130", true, etsitty == vesa); 
    etsitty = kirjailijatVar.annaKirjailija(2); 
    assertEquals("From: Kirjailijat line: 132", true, etsitty == tupu); 
    etsitty = kirjailijatVar.annaKirjailija(3); 
    assertEquals("From: Kirjailijat line: 134", true, etsitty == hupu); 
    etsitty = kirjailijatVar.annaKirjailija(4); 
    assertEquals("From: Kirjailijat line: 136", true, etsitty == lupu); 
    etsitty = kirjailijatVar.annaKirjailija(5); 
    assertEquals("From: Kirjailijat line: 138", true, etsitty == rupu); 
  } // Generated by ComTest END
}